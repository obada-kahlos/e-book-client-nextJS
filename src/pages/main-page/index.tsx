import Card from "@/components/card/card";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useEffect } from "react";
import { useGetBookByGenreQuery } from "@/api/books/api";
import Loading from "@/components/loading/loading";
const MainPage = () => {
  const books = [
    {
      img: "/images/book-one.jpg",
      title: "Book's Name.",
      price: "12300$",
    },
    {
      img: "/images/2d8478184f3843cc96f277296fcf3966.png.jpg",
      title: "Book's Name.",
      price: "12300$",
    },
    {
      img: "/images/book-one.jpg",
      title: "Book's Name.",
      price: "12300$",
    },
    {
      img: "/images/2d8478184f3843cc96f277296fcf3966.png.jpg",
      title: "Book's Name.",
      price: "12300$",
    },
    {
      img: "/images/book-one.jpg",
      title: "Book's Name.",
      price: "12300$",
    },
  ];

  const { data: booksByGenreOne, isLoading } = useGetBookByGenreQuery({
    id: 1,
    pageSize: 6,
    pageNumber: 1,
  });
  const { data: booksByGenreTow } = useGetBookByGenreQuery({
    id: 2,
    pageSize: 6,
    pageNumber: 1,
  });
  console.log({ booksByGenreTow });

  const { data: booksByGenreThree } = useGetBookByGenreQuery({
    id: 3,
    pageSize: 6,
    pageNumber: 1,
  });

  // const getToken =
  //   typeof window !== "undefined"
  //     ? JSON.parse(localStorage.getItem("e-book") as any)
  //     : null;
  // const router = useRouter();
  // useEffect(() => {
  //   if (!getToken) {
  //     router.push("login");
  //   }
  // }, [getToken]);

  return (
    <>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {isLoading ? (
        <>
          <Loading />
        </>
      ) : (
        <>
          <div className="wrapper flex justify-center items-center min-h-[350px]">
            <div className="text-center">
              <div className="max-w-2xl">
                <h1 className={`md:text-5xl text-4xl font-bold lg:w-12/12`}>
                  Best Place to Find Your Favorit
                  <span className="text-bothColor"> Books.</span>
                </h1>
                <p className="py-6">
                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Eaque
                  nemo totam delectus ut deleniti, accusamus illum magni,
                  facilis libero dolore vero quae. Sint, impedit beatae
                  similique distinctio nihil recusandae. Itaque!
                </p>
                <button className="btn btn-primary">Get Started</button>
              </div>
            </div>
          </div>
          <div
            className="wrapper relative min-h-[400px] box-border"
            style={{ backgroundPosition: "center center" }}>
            <div style={{ boxSizing: "inherit" }} className="flex">
              <div className="min-h-[500px]">
                <img
                  src="/images/home-bg.png"
                  alt="bg-iamge"
                  className="home-image"
                />
              </div>
            </div>
          </div>
          <div className="divider"></div>
          {booksByGenreOne?.response?.length > 0 ? (
            <div className="wrapper py-[40px]">
              <h2 className="md:text-[32px] text-[18px] text-bothColor my-[20px]">
                Gener Book.
              </h2>
              <div className="flex justify-center gap-4 items-center flex-wrap">
                {booksByGenreOne?.response?.map((item: any, key: number) => (
                  <div className="card w-96 bg-base-100 shadow-xl" key={key}>
                    <figure className="px-5 pt-5">
                      <img
                        src={item?.image}
                        alt={item?.title}
                        className="rounded-xl w-[50%]"
                      />
                    </figure>
                    <div className="card-body items-center text-center">
                      <h2 className="card-title">{item.title}</h2>
                      <p>{item?.description?.slice(0, 40)}</p>
                      <div className="card-actions">
                        <Link
                          href={`/book-info/${item.id}`}
                          className="btn btn-primary">
                          View Now
                        </Link>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
              {booksByGenreOne?.response?.length > 5 && (
                <Link href="/genre/1">
                  <h3 className="cursor-pointer text-end my-[20px] text-bothColor">
                    View All
                  </h3>
                </Link>
              )}
            </div>
          ) : null}

          {booksByGenreTow?.response?.length > 0 ? (
            <div className="wrapper py-[40px]">
              <h2 className="md:text-[32px] text-[18px] text-bothColor my-[20px]">
                Gener Book.
              </h2>
              <div className="flex justify-center gap-4 items-center flex-wrap">
                {booksByGenreTow?.response?.map((item: any, key: number) => (
                  <div className="card w-96 bg-base-100 shadow-xl" key={key}>
                    <figure className="px-5 pt-5">
                      <img
                        src={item?.image}
                        alt={item?.title}
                        className="rounded-xl w-[50%]"
                      />
                    </figure>
                    <div className="card-body items-center text-center">
                      <h2 className="card-title">{item.title}</h2>
                      <p>{item?.description?.slice(0, 40)}</p>
                      <div className="card-actions">
                        <Link
                          href={`/book-info/${item.id}`}
                          className="btn btn-primary">
                          View Now
                        </Link>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
              {booksByGenreTow?.response?.length > 5 && (
                <Link href="/genre/2">
                  <h3 className="cursor-pointer text-end my-[20px] text-bothColor">
                    View All
                  </h3>
                </Link>
              )}
            </div>
          ) : null}
          <div className="divider"></div>
        </>
      )}
    </>
  );
};

export default MainPage;
